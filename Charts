import pandas as pd
import numpy as np

##Reading file, Converting dates to datetime format
df = pd.read_csv("pls_fy18_state_pud18i.csv", parse_dates=['STARTDAT','ENDDATE'])

##Creating dictionary to have index position for each column head
col_mapping_dict = {c[0]:c[1] for c in enumerate(df.columns)}
col_mapping_dict

##Cutting out unneeded columns from the data frame
df = df.iloc[:, np.r_[0,1,4,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,59,61,63,65,67,69,71,73,75,77,79,81,83,85,117,119,127,128]]

##Removing entries with any null values (in this set, "-1" means value is missing)
df = df[df['TOTSTAFF'] >= 0]

#Changing to categorical for testing/ML
df.OBEREG = pd.Categorical(df.OBEREG)
df.OBEREG = df.OBEREG.cat.codes

##Drop columns that are territories/not states: Guam, American Samoa, Northern Mariana Islands & D.C.
df = df.drop(df.index[[3,8,12,27]])

import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import numpy as np
from scipy import stats
from matplotlib.pyplot import figure
import plotly.express as px
import plotly.offline as plyo

#Histograms with matplotlib
df[["CENTLIB", "BRANLIB", "BKMOB"]].plot(kind="hist", grid=True, figsize=(15,7))
plt.title('Number of Different Types of Libaries')
plt.show()


##Correlation plot
def createCorrelationPlot(df):
    sns.set(style="dark")
    corr = df.corr()

    mask = np.triu(np.ones_like(corr, dtype=np.bool))

    f, ax = plt.subplots(figsize=(11, 9))

    cmap = sns.diverging_palette(220, 10, as_cmap=True)

    sns.heatmap(df.corr()
                ,mask=np.triu(np.ones_like(df.corr(), dtype=np.bool))
                ,cmap=sns.diverging_palette(220, 10, as_cmap=True)
                ,vmax=.3, center=0
                ,square=True, linewidths=.5, cbar_kws={"shrink": .5})
    plt.show()
    
createCorrelationPlot(df[["CENTLIB", "TOTINCM", "TOTSTAFF"]])

##Seaborn plots
df['TOTAL_LIB']=df['CENTLIB'] + df['BRANLIB'] + df['BKMOB']

t1 = sns.lmplot(x='TOTAL_LIB', y='TOTINCM', data=df)
t1.set(xlabel='Total Libraries', ylabel='Total Income', title='Total Libraries vs Total Income')
plt.show()

t2 = sns.lmplot(x='TOTAL_LIB', y='POPU_ST', data=df)
t2.set(xlabel='Total Libraries', ylabel='State Population', title='Total Libraries vs State Population')
plt.show()

t3 = sns.lmplot(x='TOTAL_LIB', y='TOTSTAFF', data=df)
t3.set(xlabel='Total Libraries', ylabel='Total Staff', title= 'Total Libraries vs Total Staff')
plt.show()



